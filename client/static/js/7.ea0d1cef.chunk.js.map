{"version":3,"sources":["common/js/splitRoute.js","components/common/AddButtonAndLoveButton/AddButtonAndLoveButton.js","common/image/add.svg","common/image/love.svg","action/rankAction.js","api/rank.js","api/rankDetails.js","components/RankDetails/RankDetails.js"],"names":["__webpack_exports__","search","searchArr","slice","split","newArr","i","length","push","AddButtonAndLoveButton","songAdd","e","songList","currentPlaySong","playing","songmid","albummid","interval","singerName","songName","stopPropagation","_this","props","songAddAction","_this2","this","_this$props$playerSto","playerStore","_this$props","singer_name","songname","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","onClick","className","src","addButton","alt","loveButton","Component","connect","state","module","exports","__webpack_require__","p","d","rankAction_rankAction","rankAction_rankDetailsAction","rankDetailsEmptyAction","rankAction","dispatch","Jsonp","g_tk","uin","format","inCharset","outCharset","notice","platform","needNewCode","_","param","then","res","code","type","data","_ref","response","rankDetailsAction","topId","topid","tpl","page","rankDetailsApi","RankDetails","rankDetailsBack","window","history","back","rankDetailsDisplay","rankDetailsStore","flag","ref","backLogo","topinfo","MacListPicUrl","ListName","day_of_year","yearFormat","date","listenFormat","listennum","playAllSongAction","songlist","style","width","playLogo","_common_Scroll_Scroll__WEBPACK_IMPORTED_MODULE_10__","onRankDetailsScroll","scrollName","paddingTop","bottom","smallPlayer","rankDetailsTop","refs","rankDetailsButton","total_song_num","map","list","index","key","songPlayAction","singer","name","_common_AddButtonAndLoveButton_AddButtonAndLoveButton__WEBPACK_IMPORTED_MODULE_11__","_common_Loading_Loading__WEBPACK_IMPORTED_MODULE_7__","spiltRoute","location","scrollStore"],"mappings":"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","file":"static/js/7.ea0d1cef.chunk.js","sourcesContent":["export default (search) => {\r\n\r\n    let searchArr = search.slice(1).split('&')\r\n    let newArr = []\r\n    for (let i = 0; i < searchArr.length; i++) {\r\n        newArr.push(searchArr[i].split('='))\r\n    }\r\n    return newArr\r\n}\r\n","import React, {Component, Fragment} from 'react';\r\nimport './AddButtonAndLoveButton.styl';\r\nimport addButton from \"../../../common/image/add.svg\";\r\nimport loveButton from \"../../../common/image/love.svg\";\r\nimport {connect} from 'react-redux';\r\nimport {songAddAction} from \"../../../action/songPlayerAction\";\r\nimport propTypes from 'prop-types';\r\n\r\nclass AddButtonAndLoveButton extends Component {\r\n    static propTypes = {\r\n        playerStore: propTypes.object.isRequired,\r\n        songAddAction: propTypes.func.isRequired,\r\n    };\r\n\r\n    songAdd = (e, songList, currentPlaySong, playing, songmid, albummid, interval, singerName, songName) => {\r\n        e.stopPropagation();\r\n        this.props.songAddAction(\r\n            songList, currentPlaySong, playing,\r\n            songmid, albummid, interval,\r\n            singerName, songName)\r\n    };\r\n\r\n    render() {\r\n        const {songList, currentPlaySong, playing} = this.props.playerStore;\r\n        const {songmid, albummid, interval, singer_name, songname} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <img\r\n                    onClick={(e) => this.songAdd(e, songList, currentPlaySong, playing, songmid, albummid, interval, singer_name, songname)}\r\n                    className='singer_details_add'\r\n                    src={addButton}\r\n                    alt=\"\"\r\n                />\r\n                <img\r\n                    className='singer_details_love'\r\n                    src={loveButton}\r\n                    alt=\"\"\r\n                />\r\n            </Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        playerStore: state.playerStore\r\n    }\r\n};\r\nexport default connect(mapStateToProps, {songAddAction})(AddButtonAndLoveButton)\r\n","module.exports = __webpack_public_path__ + \"static/media/add.5e7d1ca0.svg\";","module.exports = __webpack_public_path__ + \"static/media/love.e0432819.svg\";","import {rankApi} from '../api/rank'\r\nimport {rankDetailsApi} from '../api/rankDetails' ;\r\nexport const rankAction = () => {\r\n    return dispatch => {\r\n        return rankApi().then(\r\n            res => {\r\n                if (res.code === 0) {\r\n                    return dispatch({type: 'rankList', data: res.data})\r\n                } else {\r\n                    return dispatch({type: 'rankError'})\r\n                }\r\n            },\r\n            ({response}) => {\r\n                dispatch({type: 'rankError'})\r\n            }\r\n        )\r\n    }\r\n};\r\n\r\nexport const rankDetailsAction=(topId)=>{\r\n    return dispatch=>{\r\n        rankDetailsApi(topId).then(res=>{\r\n            if(res.code===0){\r\n                return dispatch({type:\"rankDetailsList\",data:res})\r\n            }else{\r\n                return dispatch({type:\"rankDetailsError\"})\r\n            }\r\n        })\r\n    }\r\n};\r\nexport const rankDetailsEmptyAction=()=>{\r\n    return dispatch=>dispatch({type:\"rankDetailsEmpty\"})\r\n};\r\n","import Jsonp from '../common/js/myJsonp';\r\n\r\nexport const rankApi = () => {\r\n    const url = 'https://c.y.qq.com/v8/fcg-bin/fcg_myqq_toplist.fcg?';\r\n    const Options = {\r\n        param: 'jsonpCallback'\r\n    };\r\n    const data = {\r\n        g_tk: 5381,\r\n        uin: 0,\r\n        format: 'jsonp',\r\n        inCharset: 'utf-8',\r\n        outCharset: 'utf-8',\r\n        notice: 0,\r\n        platform: 'h5',\r\n        needNewCode: 1,\r\n        _: 154564564980,\r\n    };\r\n    return Jsonp(url, data, Options)\r\n};\r\n","import Jsonp from '../common/js/myJsonp';\r\n\r\nexport const rankDetailsApi = (topid) => {\r\n    const url = 'https://c.y.qq.com/v8/fcg-bin/fcg_v8_toplist_cp.fcg?';\r\n    const Options = {\r\n        param: 'jsonpCallback'\r\n    };\r\n    const data = {\r\n        g_tk: 5381,\r\n        uin: 0,\r\n        format: 'jsonp',\r\n        inCharset: 'utf-8',\r\n        outCharset: 'utf-8',\r\n        notice: 0,\r\n        platform: 'h5',\r\n        needNewCode: 1,\r\n        tpl: 3,\r\n        page: 'detail',\r\n        type: 'top',\r\n        topid: topid,\r\n        _: 1545904678804\r\n    };\r\n    return Jsonp(url, data, Options)\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Loading from '../common/Loading/Loading';\r\nimport './RankDetails.styl';\r\nimport PropTypes from 'prop-types';\r\nimport {yearFormat, listenFormat} from '../../common/js/format';\r\nimport Scroll from '../common/Scroll/Scroll';\r\nimport AddButtonAndLoveButton from \"../common/AddButtonAndLoveButton/AddButtonAndLoveButton\";\r\nimport {playAllSongAction, songPlayAction} from \"../../action/songPlayerAction\";\r\nimport {rankDetailsAction} from \"../../action/rankAction\";\r\nimport spiltRoute from \"../../common/js/splitRoute\";\r\n//\r\nimport playLogo from \"../../common/image/play.svg\";\r\nimport backLogo from '../../common/image/back.svg';\r\n\r\n//引入组件\r\nclass RankDetails extends Component {\r\n    static propTypes = {\r\n        rankDetailsStore: PropTypes.object.isRequired,\r\n        scrollStore: PropTypes.object.isRequired,\r\n        playerStore: PropTypes.object.isRequired,\r\n        playAllSongAction: PropTypes.func.isRequired,\r\n        songPlayAction: PropTypes.func.isRequired,\r\n        rankDetailsAction: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.rankDetailsAction(spiltRoute(this.props.history.location.search)[0][1]);\r\n    }\r\n\r\n    rankDetailsBack = () => {\r\n        window.history.back()\r\n    };\r\n    songAdd = (e, songList, currentPlaySong, playing, songmid, albummid, interval, singerName, songName) => {\r\n        e.stopPropagation();\r\n        this.props.songAddAction(\r\n            songList, currentPlaySong, playing,\r\n            songmid, albummid, interval,\r\n            singerName, songName)\r\n    };\r\n\r\n    rankDetailsDisplay = (rankDetailsStore) => {\r\n        if (rankDetailsStore.flag) {\r\n            return (\r\n                <Fragment>\r\n                    <div ref='rankDetailsHead' className='rankDetails_head'>\r\n                        <img onClick={this.rankDetailsBack} src={backLogo} alt=\"\"/>\r\n                    </div>\r\n                    <div ref='rankDetailsTop' className='rank_details_top'>\r\n                        <div className='rankDetails_info'>\r\n                            <div className='rankDetails_info_image'>\r\n                                <img src={rankDetailsStore.topinfo.MacListPicUrl} alt=\"\"/>\r\n                            </div>\r\n                            <div className='rankDetails_info_text'>\r\n                                <div>{rankDetailsStore.topinfo.ListName}</div>\r\n                                <div>第{rankDetailsStore.day_of_year}天</div>\r\n                                <div>{yearFormat(rankDetailsStore.date)}</div>\r\n                                <div>热度：{listenFormat(rankDetailsStore.topinfo.listennum)}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div ref='rankDetailsButton' className='rankDetails_button'>\r\n                            <button onClick={() => this.props.playAllSongAction(rankDetailsStore.songlist, 'data')}\r\n                                    className='play_btn'>\r\n                                <span ref='fontsize'>播放全部</span>\r\n                                <img style={{width: 20}} src={playLogo} alt=\" \"/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <Scroll\r\n                        onRankDetailsScroll={true}\r\n                        scrollName='rankDetailsScroll'\r\n                        paddingTop='245px'\r\n                        bottom={!this.props.playerStore.smallPlayer ? 0 : '10vh'}\r\n                        rankDetailsTop={this.refs.rankDetailsTop}\r\n                        rankDetailsButton={this.refs.rankDetailsButton}\r\n                    >\r\n                        <div className='rankDetails_song_list_title'>排行榜 共{rankDetailsStore.total_song_num}首</div>\r\n                        <ul className='rankDetails_song_list_container'>\r\n                            {rankDetailsStore.songlist.map((list, index) => {\r\n                                return (\r\n                                    <li\r\n                                        key={list.data.songmid}\r\n                                        className='rankDetails_song_list_item'\r\n                                        onClick={() => this.props.songPlayAction(this.props.playerStore.songList, list.data.songmid, list.data.albummid, list.data.interval, list.data.singer[0].name, list.data.songname)}\r\n                                    >\r\n                                        <div className='rankDetails_song_list_item_rank'>{index + 1}</div>\r\n                                        <div className='rankDetails_song_list_item_song'>\r\n                                            <div>{list.data.songname}</div>\r\n                                            <div>{list.data.singer[0].name}</div>\r\n                                        </div>\r\n                                        <div className='rankDetails_song_list_item_tools'>\r\n                                            <AddButtonAndLoveButton\r\n                                                songmid={list.data.songmid}\r\n                                                albummid={list.data.albummid}\r\n                                                interval={list.data.interval}\r\n                                                singer_name={list.data.singer[0].name}\r\n                                                songname={list.data.songname}\r\n                                            />\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </Scroll>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Loading/>\r\n            )\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {rankDetailsStore} = this.props;\r\n        return (\r\n            this.rankDetailsDisplay(rankDetailsStore)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rankDetailsStore: state.rankDetailsStore,\r\n        playerStore: state.playerStore,\r\n        scrollStore: state.scrollStore\r\n    }\r\n};\r\nexport default connect(mapStateToProps, {rankDetailsAction, playAllSongAction, songPlayAction})(RankDetails)\r\n"],"sourceRoot":""}